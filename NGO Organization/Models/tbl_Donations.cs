//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NGO_Organization.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;

    public partial class tbl_Donations
    {
        public int DonationID { get; set; }

        [Required(ErrorMessage = "Name is required*")]
        [Display(Name = "Name")]
        public string Username { get; set; }

        [RegularExpression(@"[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}", ErrorMessage = "Please enter Valid Email*")]
        [Required(ErrorMessage = "Email is required*")]
        [Display(Name = "Email")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Donation Amount is required*")]
        [Display(Name = "Amount")]
        public int DonationAmount { get; set; }


        public Nullable<System.DateTime> DonationDateTime { get; set; }

        [Required(ErrorMessage = "Cause Name is required*")]
        [Display(Name = "Cause")]
        public Nullable<int> CauseID { get; set; }

        [Required(ErrorMessage = "Card Name is required*")]
        [Display(Name = "Card Name")]
        public string CardName { get; set; }


        [DataType(DataType.PhoneNumber)]
        [Display(Name = "Card Number")]
        [Required(ErrorMessage = "Card Number is Required!")]
        [RegularExpression(@"^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$", ErrorMessage = " Invalid card number*")]
        public string CardNumber { get; set; }

        [Required(ErrorMessage = "Card owner name is required*")]
        [Display(Name = "Card Owner")]
        public string CardOwner { get; set; }

        [DisplayFormat(DataFormatString = "{0:dd.MM.yyyy}")]
        [Required(ErrorMessage = "Expiration date is required*")]
        [DataType(DataType.DateTime)]
        public Nullable<System.DateTime> CExpirydate { get; set; }


        [Required(ErrorMessage = "CV Code is required*")]
        [Display(Name = "CV Code")]

        [MaxLength(4)]
        [MinLength(3)]
        [RegularExpression("^[0-9]*$", ErrorMessage = "UPRN must be numeric")]
        public string CVCode { get; set; }



        public virtual tbl_DonationCauses tbl_DonationCauses { get; set; }
        //public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        //{
        //    List<ValidationResult> results = new List<ValidationResult>();

        //    if (CExpirydate < DateTime.Now)
        //    {
        //        results.Add(new ValidationResult("Your Card is expired please try again with a valid card number", new[] { "CExpirydate" }));
        //    }

          

        //    return results;
        //}
    }
}


